(function() {
    var type_impls = Object.fromEntries([["fe_compiler_test_utils",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler-for-StackExecutor%3C'config,+'precompiles,+S,+P%3E\" class=\"impl\"><a href=\"#impl-Handler-for-StackExecutor%3C'config,+'precompiles,+S,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'config, 'precompiles, S, P&gt; Handler for StackExecutor&lt;'config, 'precompiles, S, P&gt;<div class=\"where\">where\n    S: StackState&lt;'config&gt;,\n    P: PrecompileSet,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CreateInterrupt\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CreateInterrupt\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CreateInterrupt</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Type of <code>CREATE</code> interrupt.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CreateFeedback\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CreateFeedback\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CreateFeedback</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Feedback value for <code>CREATE</code> interrupt.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CallInterrupt\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CallInterrupt\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CallInterrupt</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Type of <code>CALL</code> interrupt.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CallFeedback\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CallFeedback\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CallFeedback</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Feedback value of <code>CALL</code> interrupt.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.balance\" class=\"method trait-impl\"><a href=\"#method.balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">balance</a>(&amp;self, address: H160) -&gt; U256</h4></section></summary><div class='docblock'>Get balance of address.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.code_size\" class=\"method trait-impl\"><a href=\"#method.code_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">code_size</a>(&amp;self, address: H160) -&gt; U256</h4></section></summary><div class='docblock'>Get code size of address.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.code_hash\" class=\"method trait-impl\"><a href=\"#method.code_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">code_hash</a>(&amp;self, address: H160) -&gt; H256</h4></section></summary><div class='docblock'>Get code hash of address.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.code\" class=\"method trait-impl\"><a href=\"#method.code\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">code</a>(&amp;self, address: H160) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Get code of address.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage\" class=\"method trait-impl\"><a href=\"#method.storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage</a>(&amp;self, address: H160, index: H256) -&gt; H256</h4></section></summary><div class='docblock'>Get storage value of address at index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.original_storage\" class=\"method trait-impl\"><a href=\"#method.original_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">original_storage</a>(&amp;self, address: H160, index: H256) -&gt; H256</h4></section></summary><div class='docblock'>Get original storage value of address at index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method trait-impl\"><a href=\"#method.exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">exists</a>(&amp;self, address: H160) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check whether an address exists.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_cold\" class=\"method trait-impl\"><a href=\"#method.is_cold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_cold</a>(&amp;self, address: H160, maybe_index: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;H256&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if the address or (address, index) pair has been previously accessed\n(or set in <code>accessed_addresses</code> / <code>accessed_storage_keys</code> via an access list\ntransaction).\nReferences: <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gas_left\" class=\"method trait-impl\"><a href=\"#method.gas_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gas_left</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get the gas left value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gas_price\" class=\"method trait-impl\"><a href=\"#method.gas_price\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gas_price</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get the gas price value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin\" class=\"method trait-impl\"><a href=\"#method.origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">origin</a>(&amp;self) -&gt; H160</h4></section></summary><div class='docblock'>Get execution origin.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_hash\" class=\"method trait-impl\"><a href=\"#method.block_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_hash</a>(&amp;self, number: U256) -&gt; H256</h4></section></summary><div class='docblock'>Get environmental block hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_number\" class=\"method trait-impl\"><a href=\"#method.block_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_number</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get environmental block number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_coinbase\" class=\"method trait-impl\"><a href=\"#method.block_coinbase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_coinbase</a>(&amp;self) -&gt; H160</h4></section></summary><div class='docblock'>Get environmental coinbase.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_timestamp\" class=\"method trait-impl\"><a href=\"#method.block_timestamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_timestamp</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get environmental block timestamp.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_difficulty\" class=\"method trait-impl\"><a href=\"#method.block_difficulty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_difficulty</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get environmental block difficulty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_gas_limit\" class=\"method trait-impl\"><a href=\"#method.block_gas_limit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_gas_limit</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get environmental gas limit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_base_fee_per_gas\" class=\"method trait-impl\"><a href=\"#method.block_base_fee_per_gas\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_base_fee_per_gas</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Environmental block base fee.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_id\" class=\"method trait-impl\"><a href=\"#method.chain_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain_id</a>(&amp;self) -&gt; U256</h4></section></summary><div class='docblock'>Get environmental chain ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deleted\" class=\"method trait-impl\"><a href=\"#method.deleted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deleted</a>(&amp;self, address: H160) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check whether an address has already been deleted.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_storage\" class=\"method trait-impl\"><a href=\"#method.set_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_storage</a>(\n    &amp;mut self,\n    address: H160,\n    index: H256,\n    value: H256,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Set storage value of address at index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">log</a>(\n    &amp;mut self,\n    address: H160,\n    topics: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;H256&gt;,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Create a log owned by address with given topics and data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mark_delete\" class=\"method trait-impl\"><a href=\"#method.mark_delete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mark_delete</a>(&amp;mut self, address: H160, target: H160) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Mark an address to be deleted, with funds transferred to target.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method trait-impl\"><a href=\"#method.create\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create</a>(\n    &amp;mut self,\n    caller: H160,\n    scheme: CreateScheme,\n    value: U256,\n    init_code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    target_gas: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; Capture&lt;(ExitReason, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;H160&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;), &lt;StackExecutor&lt;'config, 'precompiles, S, P&gt; as Handler&gt;::CreateInterrupt&gt;</h4></section></summary><div class='docblock'>Invoke a create operation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;mut self,\n    code_address: H160,\n    transfer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Transfer&gt;,\n    input: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    target_gas: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>&gt;,\n    is_static: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n    context: Context,\n) -&gt; Capture&lt;(ExitReason, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;), &lt;StackExecutor&lt;'config, 'precompiles, S, P&gt; as Handler&gt;::CallInterrupt&gt;</h4></section></summary><div class='docblock'>Invoke a call operation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_validate\" class=\"method trait-impl\"><a href=\"#method.pre_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pre_validate</a>(\n    &amp;mut self,\n    context: &amp;Context,\n    opcode: Opcode,\n    stack: &amp;Stack,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Pre-validation step for the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_feedback\" class=\"method trait-impl\"><a href=\"#method.create_feedback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_feedback</a>(\n    &amp;mut self,\n    _feedback: Self::CreateFeedback,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Feed in create feedback.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_feedback\" class=\"method trait-impl\"><a href=\"#method.call_feedback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_feedback</a>(\n    &amp;mut self,\n    _feedback: Self::CallFeedback,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Feed in call feedback.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.other\" class=\"method trait-impl\"><a href=\"#method.other\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">other</a>(\n    &amp;mut self,\n    opcode: Opcode,\n    _stack: &amp;mut Machine,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class='docblock'>Handle other unknown external opcodes.</div></details></div></details>","Handler","fe_compiler_test_utils::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackExecutor%3C'config,+'precompiles,+S,+P%3E\" class=\"impl\"><a href=\"#impl-StackExecutor%3C'config,+'precompiles,+S,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'config, 'precompiles, S, P&gt; StackExecutor&lt;'config, 'precompiles, S, P&gt;<div class=\"where\">where\n    S: StackState&lt;'config&gt;,\n    P: PrecompileSet,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">config</a>(&amp;self) -&gt; &amp;'config Config</h4></section></summary><div class=\"docblock\"><p>Return a reference of the Config.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.precompiles\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">precompiles</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'precompiles P</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the precompile set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_precompiles\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_with_precompiles</a>(\n    state: S,\n    config: &amp;'config Config,\n    precompile_set: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'precompiles P</a>,\n) -&gt; StackExecutor&lt;'config, 'precompiles, S, P&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new stack-based executor with given precompiles.</p>\n</div></details><section id=\"method.state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">state</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;S</a></h4></section><section id=\"method.state_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">state_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut S</a></h4></section><section id=\"method.into_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_state</a>(self) -&gt; S</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter_substate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">enter_substate</a>(&amp;mut self, gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>, is_static: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Create a substate executor from the current executor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit_substate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exit_substate</a>(&amp;mut self, kind: StackExitKind) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ExitError&gt;</h4></section></summary><div class=\"docblock\"><p>Exit a substate. Panic if it results an empty substate stack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(&amp;mut self, runtime: &amp;mut Runtime&lt;'_&gt;) -&gt; ExitReason</h4></section></summary><div class=\"docblock\"><p>Execute the runtime until it returns.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">gas</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Get remaining gas.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transact_create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transact_create</a>(\n    &amp;mut self,\n    caller: H160,\n    value: U256,\n    init_code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>,\n    access_list: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(H160, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;H256&gt;)&gt;,\n) -&gt; (ExitReason, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Execute a <code>CREATE</code> transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transact_create2\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transact_create2</a>(\n    &amp;mut self,\n    caller: H160,\n    value: U256,\n    init_code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: H256,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>,\n    access_list: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(H160, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;H256&gt;)&gt;,\n) -&gt; (ExitReason, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Execute a <code>CREATE2</code> transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transact_call\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transact_call</a>(\n    &amp;mut self,\n    caller: H160,\n    address: H160,\n    value: U256,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>,\n    access_list: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(H160, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;H256&gt;)&gt;,\n) -&gt; (ExitReason, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Execute a <code>CALL</code> transaction with a given caller, address, value and\ngas limit and data.</p>\n<p>Takes in an additional <code>access_list</code> parameter for EIP-2930 which was\nintroduced in the Ethereum Berlin hard fork. If you do not wish to use\nthis functionality, just pass in an empty vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.used_gas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">used_gas</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Get used gas for the current executor, given the price.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fee\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">fee</a>(&amp;self, price: U256) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get fee needed for the current executor, given the price.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">nonce</a>(&amp;self, address: H160) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get account nonce.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_address\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_address</a>(&amp;self, scheme: CreateScheme) -&gt; H160</h4></section></summary><div class=\"docblock\"><p>Get the create address from given scheme.</p>\n</div></details><section id=\"method.initialize_with_access_list\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize_with_access_list</a>(\n    &amp;mut self,\n    access_list: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(H160, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;H256&gt;)&gt;,\n)</h4></section></div></details>",0,"fe_compiler_test_utils::Executor"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[28839]}